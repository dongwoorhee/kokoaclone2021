#chatscreen {
    width : 660px;
    height: 500vh;
    position: relative;
    background-color: #abc1d1;
}

#chatscreen .status-bar {
    z-index: 2;
    background-color: #abc1d1;
}

#chatscreen .alt-header {
    top: 0px;
    position: fixed;
    width: 660px;
    box-sizing: border-box;
    top: 10px;
    background-color: #abc1d1;
    z-index: 1;
}

@keyframes fadein {
    from {
        transform: translateY(30px);
        opacity: 0;
    }
    to {
        transform: none;
        opacity: 1;
    }
}

.main-chat {
    margin-left: 20px;
    margin-right: 20px;
    /* position: sticky; */
    margin-top: 150px;
    /* z-index: 3; */
    /* main-chat is not a fixed component so, z-index doesn't work, if you want to apply let it same position property with others */
    display: flex;
    flex-direction: column;
    align-items: center;
    /* animation: fadein 0.8s linear; */
}

.chat__timestamp {
    color: white;
    background-color: #92a4b2;
    padding: 15px;
    border-radius: 25px;
    font-size: 14px;
    margin-bottom: 25px;
}

.message-row {
    width: 660px;
    display: flex;
    margin-bottom: 25px;
    transition: all 1s ease-in-out;
}

@keyframes messagerowappear {
    from {
        opacity: 0;
        transform: translateX(-200px);
    }
    to {
        opacity: 1;
        transform: none;
    }
}

@keyframes messagerowappearback {
    from {
        opacity: 0;
        transform: translateX(200px);
    }
    to {
        opacity: 1;
        transform: none;
    }
}

.message-row:not(.message-row__own) {
    animation: messagerowappear 0.7s ease-in-out;
}

.message-row__own {
    animation: messagerowappearback 0.7s ease-in-out;
    /* animation-direction: reverse; */
}

.message-row img {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    margin-right: 10px;
    
}

.message__author {
    opacity: 0.8;
    font-size: 13px;
    display: block;
    margin-bottom: 5px;
}

.message__info {
    display: flex;
    align-items: flex-end;
}

.message__bubble {
    background-color: white;
    padding: 13px;
    border-radius: 15px;
    border-top-left-radius: 0px;
    margin-right: 5px;
    font-size: 18px;
}

.message__author,
.message__time {
    font-size: 14px;
    color: rgba(0, 0, 0, 0.8);

}

.message-row__own {
    justify-content: flex-end;
}

.message-row__own .message__info {
    flex-direction: row-reverse;
    /* or you can choose this option instead of order */
}

.message-row__own .message__bubble {
    background-color: var(--yellow);
    border-top-left-radius: 15px;
    border-top-right-radius: 0px;
    /* order: 1; */
    /* you can use order property to flex children only  */
    margin-left: 5px;
}

.reply {
    position: fixed;
    bottom: 0px;
    width: 660px;
    background-color: white;
    display: flex;
    justify-content: space-between;
    padding: 5px 25px;
    box-sizing: border-box;
    align-items: center;
    transition: all 0.7s ease-in-out;
}

.reply .reply__column:first-child {
    width: 10%;
}

.reply .reply__column:last-child {
    width: 90%;
    position: relative;
}

.reply input {
    /* height: 30px; */
    padding: 12px 0px;
    padding-left: 12px;
    width: 100%;
    border: var(--main-border);
    border-radius: 20px;
    transition: all 0.7s ease-in-out;
}

.reply__column:last-child > i,
.reply__column:last-child button {
    position: absolute;
    right: -3px;
    top: 2px;
}

/* > implies the direct children element of the parent tag  */

.reply__column:last-child > i {
    right: 40px;
    top: 12px;
}

.reply__column button {
    background-color: var(--yellow);
    border: none;
    width: 35px;
    height: 35px;
    border-radius: 50%;
    text-align: center;
    /* display: flex;
    justify-content: center;
    align-items: center; */
}

.reply__column button:focus,
.reply__column button:active {
    outline: none;
}

.reply i {
    opacity: 0.5;
}

.reply .reply__column:first-child,
.reply .fa-smile-wink,
.reply button {
    transition: all 0.7s ease-in-out;
}

.reply:focus-within .reply__column:first-child,
.reply:focus-within .fa-smile-wink,
.reply:focus-within button {
    opacity: 0;
    visibility: hidden;
}

/* if focus-within happen then next class or id element's css property would be changed as described within {} */

.reply:focus-within input {
    width: 600px;
    transform: translateX(-10%) translateY(-80px);
}

.reply:focus-within {
    transform: translateY(80px);
}